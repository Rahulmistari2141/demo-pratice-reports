
Install Angular File Code :-

command for create module with rounting
  -ng generate module secure --route secure --module app.module

command for create component 
  -ng generate component sidebar --skip-tests
  -ng generate component header --skip-tests
  -ng generate component footer --skip-tests
  -ng generate component web-header --skip-tests
  -ng generate component web-footer --skip-tests
  -ng generate component (file-name) --standalone

Generate Interface:
  -ng generate interface (file-name) 

Generate Services:
  -ng g s service(filename) --skip-tests    

Guards Services:
  -ng g g service(filename) --skip-tests  

Install Angular Material Code:-

import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatCardModule } from '@angular/material/card';
import { MatDividerModule } from '@angular/material/divider';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { MatChipsModule } from '@angular/material/chips';
import { MatNativeDateModule, MatRippleModule } from '@angular/material/core';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatPaginatorModule } from '@angular/material/paginator';
import { MatSelectModule } from '@angular/material/select';
import { MatSnackBarModule } from '@angular/material/snack-bar';
import { MatSortModule } from '@angular/material/sort';
import { MatTableModule } from '@angular/material/table';
import { MatTabsModule } from '@angular/material/tabs';
import { MatRadioModule } from '@angular/material/radio';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatDialogModule } from '@angular/material/dialog';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatGridListModule } from '@angular/material/grid-list';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatMenuModule } from '@angular/material/menu';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatAutocompleteModule } from '@angular/material/autocomplete';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatStepperModule } from '@angular/material/stepper';
import {MatBottomSheetModule} from '@angular/material/bottom-sheet';


@NgModule({
  declarations: [],
  imports: [
    CommonModule,
    // Material 
    MatButtonModule,
    MatIconModule,
    MatDatepickerModule,
    MatNativeDateModule,
    MatCardModule,
    MatChipsModule,
    MatExpansionModule,
    MatFormFieldModule,
    MatInputModule,
    MatMenuModule,
    MatPaginatorModule,
    MatRippleModule,
    MatSelectModule,
    MatSortModule,
    MatSnackBarModule,
    MatTableModule,
    MatTabsModule,
    MatRadioModule,
    MatGridListModule,
    MatToolbarModule,
    MatTooltipModule,
    MatCheckboxModule,
    MatProgressSpinnerModule,
    MatDividerModule,
    MatDialogModule,
    MatAutocompleteModule,
    MatSlideToggleModule,
    MatStepperModule,
    MatBottomSheetModule
  ],
  exports: [
    // Material
    MatCardModule,
    MatButtonModule,
    MatIconModule,
    MatDatepickerModule,
    MatNativeDateModule,
    MatButtonModule,
    MatChipsModule,
    MatExpansionModule,
    MatFormFieldModule,
    MatInputModule,
    MatMenuModule,
    MatPaginatorModule,
    MatRippleModule,
    MatSelectModule,
    MatSortModule,
    MatSnackBarModule,
    MatTableModule,
    MatTabsModule,
    MatRadioModule,
    MatGridListModule,
    MatToolbarModule,
    MatTooltipModule,
    MatCheckboxModule,
    MatProgressSpinnerModule,
    MatDividerModule,
    MatDialogModule,
    MatAutocompleteModule,
    MatSlideToggleModule,
    MatStepperModule,
    MatBottomSheetModule,
  ]
})
export class MaterialModule { }



//--------------css--------------//

.text-ellipsis-150-L2,
.text-ellipsis-200-L2,
.text-ellipsis-250-L2
 {
  display: -webkit-box;
  overflow: hidden !important;
  max-height: 40px;
  margin-bottom: 0!important;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  margin-bottom: 0px!important;
}
.text-ellipsis-150-L2 {
  max-width: 150px !important;
}
.text-ellipsis-200-L2 {
  max-width: 200px !important;
}
.text-ellipsis-250-L2 {
  max-width: 250px !important;
}




userTypeArry = new Array();
  departmentarray = new Array();
  districtarray = new Array();
  talukaarray = new Array();
  tablelistarray = new Array();
 
  constructor(private service: DummyServiceService) { }
 
  ngOnInit() {
    this.usertypes();
    this.departmenttype();
    this.disricttype();
    this.talukalist();
    this.tablelist();
  }
 
  usertypes() {
    this.service.getusertypelist().subscribe((res: any) => {
      if (res.statusCode == "200") {
        this.userTypeArry = res.responseData;
 
      }
      else {
        this.userTypeArry = []
      }
    })
  }
  departmenttype() {
    this.service.getdepartmentlist().subscribe((res: any) => {
      if (res.statusCode == "200") {
        this.departmentarray = res.responseData;
      }
      else {
        this.departmentarray = []
      }
    })
  }
 
  disricttype() {
    this.service.getdistrictlist().subscribe((res: any) => {
      // console.log(res);
      if (res.statusCode == "200") {
        this.districtarray = res.responseData;
      }
      else {
        this.districtarray = []
      }
 
    })
  }
 
  talukalist() {
    this.service.gettalukalist().subscribe((res: any) => {
      if (res.statusCode == "200") {
        this.talukaarray = res.responseData;
        // console.log(" this.talukaarray ", this.talukaarray)
      }
      else {
        this.talukaarray = []
      }
 
    })
  }
 
  tablelist() {
    this.service.gettableuserlisturl().subscribe((res: any) => {
      if (res.statusCode == "200") {
        this.tablelistarray = res.responseData;
      }
      else {
        this.tablelistarray = []
      }
    })
  }
 
 